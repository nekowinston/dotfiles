" vim:ft=vim:fenc=utf-8:fdm=marker
""" map leader to <space> ----------------------------------------------------
let mapleader=" "

""" emulated plugins
" use 'c|d|yia' to c|d|y inner arguments
set argtextobj
" enable gcc / gc+motion to toggle comments
set commentary
" jump around text easier, with <space> as leader
set easymotion
" highlight yank. duh.
set highlightedyank
" vim navigation for the dir tree view
set NERDTree
set ReplaceWithRegister
set surround
set textobj-entire
" which-key, yay
set which-key

""" Common settings ----------------------------------------------------------
" '_' is a word separator
set iskeyword-=_
set relativenumber
set number
set showcmd
set showmode
" scroll offset
set scrolloff=5
set sidescrolloff=5
" don't use Ex mode, use Q for formatting.
map Q gq

""" IDEA-specific settings ---------------------------------------------------
set ideamarks
set ideajoin
set ideastatusicon=gray

""" Mappings -----------------------------------------------------------------
" IDEA binds
map <leader>a <Action>(Annotate)
map <leader>b <Action>(ToggleLineBreakpoint)
map <leader>h <Action>(Vcs.ShowTabbedFileHistory)
map <leader>rn <Action>(RenameElement)

" plugin binds
map <C-N> :NERDTreeToggle<CR>

" easier split navigation
nnoremap <C-H> <C-W><C-H>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>

sethandler <C-D> a:vim
sethandler <C-U> a:vim
sethandler <C-R> n:ide

map <A-<> <Action>(PreviousTab)
map <A->> <Action>(NextTab)
map <A-c> <Action>(NewScratchFile)
map <A-x> <Action>(CloseContent)

" Zen mode
map <leader>zz <Action>(ToggleZenMode)

" File navigation
map <leader>fd <Action>(GotoFile)
map <leader>fg <Action>(FindInPath)
map <leader>fl <Action>(RecentLocations)

map [d <Action>(GotoPreviousError)
map ]d <Action>(GotoNextError)

map [c <Action>VcsShowPrevChangeMarker
map [c <Action>VcsShowNextChangeMarker

" show hoverdoc
map H <Action>(ShowErrorDescription)
